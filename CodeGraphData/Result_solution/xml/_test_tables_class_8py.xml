<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="_test_tables_class_8py" kind="file">
    <compoundname>TestTablesClass.py</compoundname>
    <innerclass refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__table__creation" prot="public">Original Structures::Structures::TestTablesClass::Test_table_creation</innerclass>
    <innerclass refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__table__read" prot="public">Original Structures::Structures::TestTablesClass::Test_table_read</innerclass>
    <innerclass refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__invalid__table__exception" prot="public">Original Structures::Structures::TestTablesClass::Test_invalid_table_exception</innerclass>
    <innerclass refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test___variable__creation" prot="public">Original Structures::Structures::TestTablesClass::Test_Variable_creation</innerclass>
    <innerclass refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing" prot="public">Original Structures::Structures::TestTablesClass::TestTableImporting</innerclass>
    <innernamespace refid="namespace_original_01_structures_1_1_structures_1_1_test_tables_class">Original Structures::Structures::TestTablesClass</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespace_original_01_structures_1_1_structures_1_1_test_tables_class" refkind="compound"><highlight class="keyword">import</highlight><highlight class="normal"><sp/>unittest</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>pathlib<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Path</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>pandas<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>pd</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>Tables<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7" refid="namespace_original_01_structures_1_1_structures_1_1_test_tables_class_1ad6fdd383acf31020fa622c112dcfa16b" refkind="member"><highlight class="normal">TableClassTests<sp/>=<sp/>unittest.TestSuite()</highlight></codeline>
<codeline lineno="8" refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__table__creation" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__table__creation" kindref="compound">Test_table_creation</ref>(unittest.TestCase):</highlight></codeline>
<codeline lineno="9" refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__table__creation_1a0f4dd9a83a73e6fea625d9ea598a846d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__table__creation_1a0f4dd9a83a73e6fea625d9ea598a846d" kindref="member">test_creation_with_all_parameters</ref>(self):</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;Test<sp/>create<sp/>table<sp/>instant<sp/>with<sp/>all<sp/>attributes<sp/>defined&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file_path<sp/>=<sp/>Path(</highlight><highlight class="stringliteral">r&apos;.\TablesTest.xlsx&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sheet_name<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;Basic&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>title<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;Basic<sp/>Table&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;A1&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;label&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>columns<sp/>=<sp/>3</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rows<sp/>=<sp/>3</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_table<sp/>=<sp/><ref refid="class_original_01_structures_1_1_structures_1_1_tables_1_1_table" kindref="compound">Table</ref>(file_path,<sp/>sheet_name,<sp/>title,<sp/>index,<sp/>offset,<sp/>columns,<sp/>rows)</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(new_table.file_path,<sp/>file_path)</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(new_table.sheet_name,<sp/>sheet_name)</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(new_table.title,<sp/>title)</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(new_table.index,<sp/>index)</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(new_table.offset,<sp/>offset)</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(new_table.columns,<sp/>columns)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(new_table.rows,<sp/>rows)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__table__creation_1a6c1e1281648b615bee0752e48e0b71ed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__table__creation_1a6c1e1281648b615bee0752e48e0b71ed" kindref="member">test_creation_with_default_parameters</ref>(self):</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;Test<sp/>create<sp/>table<sp/>instant<sp/>with<sp/>only<sp/>required<sp/>attributes<sp/>defined&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file_path<sp/>=<sp/>Path(</highlight><highlight class="stringliteral">r&apos;.\TablesTest.xlsx&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sheet_name<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;Basic&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_table<sp/>=<sp/><ref refid="class_original_01_structures_1_1_structures_1_1_tables_1_1_table" kindref="compound">Table</ref>(file_path,<sp/>sheet_name)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(new_table.file_path,<sp/>file_path)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(new_table.sheet_name,<sp/>sheet_name)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(new_table.offset,<sp/></highlight><highlight class="stringliteral">&apos;A1&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertIsNone(new_table.title)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertIsNone(new_table.index)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertIsNone(new_table.columns)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertIsNone(new_table.columns)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="39"><highlight class="normal">TableClassTests.addTest(<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__table__creation" kindref="compound">Test_table_creation</ref>(</highlight><highlight class="stringliteral">&apos;test_creation_with_default_parameters&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="40"><highlight class="normal">TableClassTests.addTest(<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__table__creation" kindref="compound">Test_table_creation</ref>(</highlight><highlight class="stringliteral">&apos;test_creation_with_all_parameters&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__table__read" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__table__read" kindref="compound">Test_table_read</ref>(unittest.TestCase):</highlight></codeline>
<codeline lineno="43" refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__table__read_1a181d6f2bb28329acaaea7a6468f0df42" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__table__read_1a181d6f2bb28329acaaea7a6468f0df42" kindref="member">setUp</ref>(self):</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;Use<sp/>a<sp/>single<sp/>Test<sp/>File&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__table__read_1a0cd66db5b3a880c1f53392ff97c74147" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__table__read_1a0cd66db5b3a880c1f53392ff97c74147" kindref="member">file_path</ref><sp/>=<sp/>Path(</highlight><highlight class="stringliteral">r&apos;.\TablesTest.xlsx&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="46" refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__table__read_1a015f05d9a95a128b80d0ffd8848b1d74" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__table__read_1a015f05d9a95a128b80d0ffd8848b1d74" kindref="member">test_excel_file</ref><sp/>=<sp/>pd.ExcelFile(self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__table__read_1a0cd66db5b3a880c1f53392ff97c74147" kindref="member">file_path</ref>)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__table__read_1a562397c5815e49874036131198326b9f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__table__read_1a562397c5815e49874036131198326b9f" kindref="member">tearDown</ref>(self):</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;Close<sp/>the<sp/>Test<sp/>file&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>del<sp/>self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__table__read_1a015f05d9a95a128b80d0ffd8848b1d74" kindref="member">test_excel_file</ref></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__table__read_1aa003b1df30c7ba06442cf378609a33eb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__table__read_1aa003b1df30c7ba06442cf378609a33eb" kindref="member">test_read_basic_table_direct_open</ref>(self):</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file_path<sp/>=<sp/>self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__table__read_1a0cd66db5b3a880c1f53392ff97c74147" kindref="member">file_path</ref></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sheet_name<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;Basic&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>title<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;Basic<sp/>Table&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;A1&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;label&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>columns<sp/>=<sp/>3</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rows<sp/>=<sp/>3</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_table<sp/>=<sp/><ref refid="class_original_01_structures_1_1_structures_1_1_tables_1_1_table" kindref="compound">Table</ref>(file_path=file_path,<sp/>sheet_name=sheet_name,<sp/>title=title,<sp/>\</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index=index,<sp/>offset=offset,<sp/>columns=columns,<sp/>rows=rows)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>basic_table<sp/>=<sp/>new_table.read_table()</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_df<sp/>=<sp/>pd.DataFrame([[1,</highlight><highlight class="stringliteral">&apos;a&apos;</highlight><highlight class="normal">],[2,</highlight><highlight class="stringliteral">&apos;b&apos;</highlight><highlight class="normal">],[3,</highlight><highlight class="stringliteral">&apos;c&apos;</highlight><highlight class="normal">]],index=[</highlight><highlight class="stringliteral">&apos;cat&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;dog&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;fish&apos;</highlight><highlight class="normal">],columns=[</highlight><highlight class="stringliteral">&quot;order&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Values&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(basic_table)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(test_df)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertTrue(basic_table.equals(test_df))</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#TODO<sp/>add<sp/>tests<sp/>for<sp/>integer<sp/>-<sp/>float<sp/>conversion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__table__read_1a931383709fc9d565079346e11da958de" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__table__read_1a931383709fc9d565079346e11da958de" kindref="member">test_read_basic_table</ref>(self):</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file_path<sp/>=<sp/>self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__table__read_1a0cd66db5b3a880c1f53392ff97c74147" kindref="member">file_path</ref></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sheet_name<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;Basic&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>title<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;Basic<sp/>Table&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;A1&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;label&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>columns<sp/>=<sp/>3</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rows<sp/>=<sp/>3</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_table<sp/>=<sp/><ref refid="class_original_01_structures_1_1_structures_1_1_tables_1_1_table" kindref="compound">Table</ref>(file_path=file_path,<sp/>sheet_name=sheet_name,<sp/>title=title,<sp/>\</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index=index,<sp/>offset=offset,<sp/>columns=columns,<sp/>rows=rows)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>basic_table<sp/>=<sp/>new_table.read_table(self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__table__read_1a015f05d9a95a128b80d0ffd8848b1d74" kindref="member">test_excel_file</ref>)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_df<sp/>=<sp/>pd.DataFrame([[1,</highlight><highlight class="stringliteral">&apos;a&apos;</highlight><highlight class="normal">],[2,</highlight><highlight class="stringliteral">&apos;b&apos;</highlight><highlight class="normal">],[3,</highlight><highlight class="stringliteral">&apos;c&apos;</highlight><highlight class="normal">]],index=[</highlight><highlight class="stringliteral">&apos;cat&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;dog&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;fish&apos;</highlight><highlight class="normal">],columns=[</highlight><highlight class="stringliteral">&quot;order&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Values&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(basic_table)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(test_df)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertTrue(basic_table.equals(test_df))</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__table__read_1acd220d1d06d0746a41f8750a8cd5cd56" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__table__read_1acd220d1d06d0746a41f8750a8cd5cd56" kindref="member">test_read_basic_table_with_defaults</ref>(self):</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file_path<sp/>=<sp/>self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__table__read_1a0cd66db5b3a880c1f53392ff97c74147" kindref="member">file_path</ref></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sheet_name<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;Basic&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>title<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;Basic<sp/>Table&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_table<sp/>=<sp/><ref refid="class_original_01_structures_1_1_structures_1_1_tables_1_1_table" kindref="compound">Table</ref>(file_path=file_path,<sp/>sheet_name=sheet_name,<sp/>title=title)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>basic_table<sp/>=<sp/>new_table.read_table()</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_df<sp/>=<sp/>pd.DataFrame([[1,</highlight><highlight class="stringliteral">&apos;a&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;cat&apos;</highlight><highlight class="normal">],[2,</highlight><highlight class="stringliteral">&apos;b&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;dog&apos;</highlight><highlight class="normal">],[3,</highlight><highlight class="stringliteral">&apos;c&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;fish&apos;</highlight><highlight class="normal">]],columns=[</highlight><highlight class="stringliteral">&quot;order&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Values&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;label&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(basic_table)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(test_df)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertTrue(basic_table.equals(test_df))</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__table__read_1a25efa96dfb58f15ac0c619a628434537" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__table__read_1a25efa96dfb58f15ac0c619a628434537" kindref="member">test_read_table_with_no_title</ref>(self):</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file_path<sp/>=<sp/>self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__table__read_1a0cd66db5b3a880c1f53392ff97c74147" kindref="member">file_path</ref></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sheet_name<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;No<sp/>Title&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_table<sp/>=<sp/><ref refid="class_original_01_structures_1_1_structures_1_1_tables_1_1_table" kindref="compound">Table</ref>(file_path=file_path,<sp/>sheet_name=sheet_name)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>basic_table<sp/>=<sp/>new_table.read_table()</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_df<sp/>=<sp/>pd.DataFrame([[1,</highlight><highlight class="stringliteral">&apos;a&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;cat&apos;</highlight><highlight class="normal">],[2,</highlight><highlight class="stringliteral">&apos;b&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;dog&apos;</highlight><highlight class="normal">],[3,</highlight><highlight class="stringliteral">&apos;c&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;fish&apos;</highlight><highlight class="normal">]],columns=[</highlight><highlight class="stringliteral">&quot;order&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Values&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;label&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(basic_table)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(test_df)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertTrue(basic_table.equals(test_df))</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__table__read_1ad1756effbeae7bb43b84b16e088aefc2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__table__read_1ad1756effbeae7bb43b84b16e088aefc2" kindref="member">test_read_table_with_missing_values</ref>(self):</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file_path<sp/>=<sp/>self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__table__read_1a0cd66db5b3a880c1f53392ff97c74147" kindref="member">file_path</ref></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sheet_name<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;Missing<sp/>Values&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>title<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;Missing<sp/>Values<sp/>Table&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;A1&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;Index&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>columns<sp/>=<sp/>3</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rows<sp/>=<sp/>3</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_table<sp/>=<sp/><ref refid="class_original_01_structures_1_1_structures_1_1_tables_1_1_table" kindref="compound">Table</ref>(file_path=file_path,<sp/>sheet_name=sheet_name,<sp/>title=title,<sp/>\</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index=index,<sp/>offset=offset,<sp/>columns=columns,<sp/>rows=rows)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>basic_table<sp/>=<sp/>new_table.read_table()</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_df<sp/>=<sp/>pd.DataFrame([[</highlight><highlight class="stringliteral">&apos;a&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;a1&apos;</highlight><highlight class="normal">],[</highlight><highlight class="stringliteral">&apos;b&apos;</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">],[</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;c2&apos;</highlight><highlight class="normal">]],index=[1,2,3],columns=[</highlight><highlight class="stringliteral">&quot;Values1&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Values2&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(basic_table)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(test_df)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertTrue(basic_table.equals(test_df))</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__table__read_1a9882303145510571826d2d9c241003ef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__table__read_1a9882303145510571826d2d9c241003ef" kindref="member">test_read_table_with_missing_values_in_bottom_right_corner</ref>(self):</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file_path<sp/>=<sp/>self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__table__read_1a0cd66db5b3a880c1f53392ff97c74147" kindref="member">file_path</ref></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sheet_name<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;Missing<sp/>Corner&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>title<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;Missing<sp/>Values<sp/>Table&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;A1&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;Index&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>columns<sp/>=<sp/>3</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rows<sp/>=<sp/>3</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_table<sp/>=<sp/><ref refid="class_original_01_structures_1_1_structures_1_1_tables_1_1_table" kindref="compound">Table</ref>(file_path=file_path,<sp/>sheet_name=sheet_name,<sp/>title=title,<sp/>\</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index=index,<sp/>offset=offset,<sp/>columns=columns,<sp/>rows=rows)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>basic_table<sp/>=<sp/>new_table.read_table()</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_df<sp/>=<sp/>pd.DataFrame([[</highlight><highlight class="stringliteral">&apos;a&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;a1&apos;</highlight><highlight class="normal">],[</highlight><highlight class="stringliteral">&apos;b&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;b2&apos;</highlight><highlight class="normal">],[</highlight><highlight class="stringliteral">&apos;c&apos;</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">]],index=[1,2,3],columns=[</highlight><highlight class="stringliteral">&quot;Values1&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Values2&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(basic_table)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(test_df)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertTrue(basic_table.equals(test_df))</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__table__read_1a53a29f1fe6ebfd54f1ad7b9e460e1415" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__table__read_1a53a29f1fe6ebfd54f1ad7b9e460e1415" kindref="member">test_read_table_with_offset_from_A1</ref>(self):</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file_path<sp/>=<sp/>self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__table__read_1a0cd66db5b3a880c1f53392ff97c74147" kindref="member">file_path</ref></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sheet_name<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;Offset&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>title<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;Basic<sp/>Table&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;D4&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>columns<sp/>=<sp/>2</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rows<sp/>=<sp/>3</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_table<sp/>=<sp/><ref refid="class_original_01_structures_1_1_structures_1_1_tables_1_1_table" kindref="compound">Table</ref>(file_path=file_path,<sp/>sheet_name=sheet_name,<sp/>title=title,<sp/>\</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset=offset,<sp/>columns=columns,<sp/>rows=rows)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>basic_table<sp/>=<sp/>new_table.read_table()</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_df<sp/>=<sp/>pd.DataFrame([[1,</highlight><highlight class="stringliteral">&apos;a&apos;</highlight><highlight class="normal">],[2,</highlight><highlight class="stringliteral">&apos;b&apos;</highlight><highlight class="normal">],[3,</highlight><highlight class="stringliteral">&apos;c&apos;</highlight><highlight class="normal">]],columns=[</highlight><highlight class="stringliteral">&quot;Index&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Values&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(basic_table)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(test_df)</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertTrue(basic_table.equals(test_df))</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__table__read_1a6fbf0ca7dfb93c2b073d9a031d91519e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__table__read_1a6fbf0ca7dfb93c2b073d9a031d91519e" kindref="member">test_read_table_with_extra_data</ref>(self):</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file_path<sp/>=<sp/>self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__table__read_1a0cd66db5b3a880c1f53392ff97c74147" kindref="member">file_path</ref></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sheet_name<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;Extra<sp/>Data&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;Index&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>title<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;Extra<sp/>Data<sp/>Table&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;A1&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>columns<sp/>=<sp/>3</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rows<sp/>=<sp/>3</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_table<sp/>=<sp/><ref refid="class_original_01_structures_1_1_structures_1_1_tables_1_1_table" kindref="compound">Table</ref>(file_path=file_path,<sp/>sheet_name=sheet_name,<sp/>title=title,<sp/>\</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index=index,<sp/>offset=offset,<sp/>columns=columns,<sp/>rows=rows)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>basic_table<sp/>=<sp/>new_table.read_table()</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_df<sp/>=<sp/>pd.DataFrame([[</highlight><highlight class="stringliteral">&apos;a&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;a1&apos;</highlight><highlight class="normal">],[</highlight><highlight class="stringliteral">&apos;b&apos;</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">],[</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;c2&apos;</highlight><highlight class="normal">]],index=[1,2,3],columns=[</highlight><highlight class="stringliteral">&quot;Values1&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Values2&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(basic_table)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(test_df)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertTrue(basic_table.equals(test_df))</highlight></codeline>
<codeline lineno="169"><highlight class="normal">TableClassTests.addTest(<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__table__read" kindref="compound">Test_table_read</ref>(</highlight><highlight class="stringliteral">&apos;test_read_basic_table&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="170"><highlight class="normal">TableClassTests.addTest(<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__table__read" kindref="compound">Test_table_read</ref>(</highlight><highlight class="stringliteral">&apos;test_read_basic_table_with_defaults&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="171"><highlight class="normal">TableClassTests.addTest(<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__table__read" kindref="compound">Test_table_read</ref>(</highlight><highlight class="stringliteral">&apos;test_read_table_with_missing_values&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="172"><highlight class="normal">TableClassTests.addTest(<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__table__read" kindref="compound">Test_table_read</ref>(</highlight><highlight class="stringliteral">&apos;test_read_table_with_missing_values_in_bottom_right_corner&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="173"><highlight class="normal">TableClassTests.addTest(<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__table__read" kindref="compound">Test_table_read</ref>(</highlight><highlight class="stringliteral">&apos;test_read_table_with_offset_from_A1&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="174"><highlight class="normal">TableClassTests.addTest(<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__table__read" kindref="compound">Test_table_read</ref>(</highlight><highlight class="stringliteral">&apos;test_read_table_with_extra_data&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__invalid__table__exception" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__invalid__table__exception" kindref="compound">Test_invalid_table_exception</ref>(unittest.TestCase):</highlight></codeline>
<codeline lineno="177" refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__invalid__table__exception_1ac1bbf87e6c4fcad2889e71b473eaf75c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__invalid__table__exception_1ac1bbf87e6c4fcad2889e71b473eaf75c" kindref="member">setUp</ref>(self):</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;Use<sp/>a<sp/>single<sp/>Test<sp/>File&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179" refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__invalid__table__exception_1ad4234992f9cd1d2f2a7a154dd0b1e442" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__invalid__table__exception_1ad4234992f9cd1d2f2a7a154dd0b1e442" kindref="member">file_path</ref><sp/>=<sp/>Path(</highlight><highlight class="stringliteral">r&apos;.\TablesTest.xlsx&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="180" refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__invalid__table__exception_1a1a042336c81dad9e25a15f6505fb16cc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__invalid__table__exception_1a1a042336c81dad9e25a15f6505fb16cc" kindref="member">test_excel_file</ref><sp/>=<sp/>pd.ExcelFile(self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__invalid__table__exception_1ad4234992f9cd1d2f2a7a154dd0b1e442" kindref="member">file_path</ref>)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182" refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__invalid__table__exception_1a64878e2a537e64a7a13cb181db7ce64d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__invalid__table__exception_1a64878e2a537e64a7a13cb181db7ce64d" kindref="member">tearDown</ref>(self):</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;Close<sp/>the<sp/>Test<sp/>file&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>del<sp/>self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__invalid__table__exception_1a1a042336c81dad9e25a15f6505fb16cc" kindref="member">test_excel_file</ref></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187" refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__invalid__table__exception_1aabaef3d79799f3321d9fa9eeb3b5fd49" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__invalid__table__exception_1aabaef3d79799f3321d9fa9eeb3b5fd49" kindref="member">test_missing_Spreadsheet</ref>(self):</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file_path<sp/>=<sp/>self.file_path.parent<sp/>/<sp/></highlight><highlight class="stringliteral">&apos;missing_file.xlsx&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sheet_name<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;Missing<sp/>Title&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>title<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;Basic<sp/>Table&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_table<sp/>=<sp/><ref refid="class_original_01_structures_1_1_structures_1_1_tables_1_1_table" kindref="compound">Table</ref>(file_path=file_path,<sp/>sheet_name=sheet_name,<sp/>title=title)</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/>self.assertRaises(MissingSpreadsheet):</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>basic_table<sp/>=<sp/>new_table.read_table()</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195" refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__invalid__table__exception_1adc3a6239cc6d5ff9f1264599941e240e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__invalid__table__exception_1adc3a6239cc6d5ff9f1264599941e240e" kindref="member">test_missing_worksheet</ref>(self):</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file_path<sp/>=<sp/>self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__invalid__table__exception_1ad4234992f9cd1d2f2a7a154dd0b1e442" kindref="member">file_path</ref></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sheet_name<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;Missing<sp/>Sheet&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>title<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;Basic<sp/>Table&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_table<sp/>=<sp/><ref refid="class_original_01_structures_1_1_structures_1_1_tables_1_1_table" kindref="compound">Table</ref>(file_path=file_path,<sp/>sheet_name=sheet_name,<sp/>title=title)</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/>self.assertRaises(MissingTable):</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>basic_table<sp/>=<sp/>new_table.read_table()</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203" refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__invalid__table__exception_1a4d27719eca7c98f89d3eefb5c06cdba3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__invalid__table__exception_1a4d27719eca7c98f89d3eefb5c06cdba3" kindref="member">test_missing_index</ref>(self):</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file_path<sp/>=<sp/>self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__invalid__table__exception_1ad4234992f9cd1d2f2a7a154dd0b1e442" kindref="member">file_path</ref></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sheet_name<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;Basic&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>title<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;Basic<sp/>Table&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;no<sp/>index&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_table<sp/>=<sp/><ref refid="class_original_01_structures_1_1_structures_1_1_tables_1_1_table" kindref="compound">Table</ref>(file_path=file_path,<sp/>sheet_name=sheet_name,<sp/>title=title,<sp/>index=index)</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/>self.assertRaises(InvalidTable):</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>basic_table<sp/>=<sp/>new_table.read_table(self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__invalid__table__exception_1a1a042336c81dad9e25a15f6505fb16cc" kindref="member">test_excel_file</ref>)</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212" refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__invalid__table__exception_1a3906f233d6b62ff9f6aab2b07685a64a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__invalid__table__exception_1a3906f233d6b62ff9f6aab2b07685a64a" kindref="member">test_duplicate_index</ref>(self):</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file_path<sp/>=<sp/>self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__invalid__table__exception_1ad4234992f9cd1d2f2a7a154dd0b1e442" kindref="member">file_path</ref></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sheet_name<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;Basic&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>title<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;Duplicate<sp/>Index&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;label&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_table<sp/>=<sp/><ref refid="class_original_01_structures_1_1_structures_1_1_tables_1_1_table" kindref="compound">Table</ref>(file_path=file_path,<sp/>sheet_name=sheet_name,<sp/>title=title,<sp/>index=index)</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/>self.assertRaises(InvalidTable):</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>basic_table<sp/>=<sp/>new_table.read_table(self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__invalid__table__exception_1a1a042336c81dad9e25a15f6505fb16cc" kindref="member">test_excel_file</ref>)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221" refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__invalid__table__exception_1aa3bec635270f4b510b525e0808599115" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__invalid__table__exception_1aa3bec635270f4b510b525e0808599115" kindref="member">test_missing_title</ref>(self):</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file_path<sp/>=<sp/>self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__invalid__table__exception_1ad4234992f9cd1d2f2a7a154dd0b1e442" kindref="member">file_path</ref></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sheet_name<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;No<sp/>Title&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>title<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;Basic<sp/>Table&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_table<sp/>=<sp/><ref refid="class_original_01_structures_1_1_structures_1_1_tables_1_1_table" kindref="compound">Table</ref>(file_path=file_path,<sp/>sheet_name=sheet_name,<sp/>title=title)</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/>self.assertRaises(InvalidTable):</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>basic_table<sp/>=<sp/>new_table.read_table(self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__invalid__table__exception_1a1a042336c81dad9e25a15f6505fb16cc" kindref="member">test_excel_file</ref>)</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229" refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__invalid__table__exception_1a440eeb7f284a50a9e29cd78524cb48c4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__invalid__table__exception_1a440eeb7f284a50a9e29cd78524cb48c4" kindref="member">test_incorrect_title</ref>(self):</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file_path<sp/>=<sp/>self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__invalid__table__exception_1ad4234992f9cd1d2f2a7a154dd0b1e442" kindref="member">file_path</ref></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sheet_name<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;Basic&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>title<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;Wrong<sp/>Table&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_table<sp/>=<sp/><ref refid="class_original_01_structures_1_1_structures_1_1_tables_1_1_table" kindref="compound">Table</ref>(file_path=file_path,<sp/>sheet_name=sheet_name,<sp/>title=title)</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/>self.assertRaises(InvalidTable):</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>basic_table<sp/>=<sp/>new_table.read_table(self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__invalid__table__exception_1a1a042336c81dad9e25a15f6505fb16cc" kindref="member">test_excel_file</ref>)</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>def<sp/>test_invalid_header_values(self):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.fail(&quot;Not<sp/>implemented&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>def<sp/>test_unexpected_location(self):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.fail(&quot;Not<sp/>implemented&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>def<sp/>test_too_many_columns(self):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.fail(&quot;Not<sp/>implemented&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>def<sp/>test_too_few_columns(self):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.fail(&quot;Not<sp/>implemented&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>def<sp/>test_too_many_rows(self):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.fail(&quot;Not<sp/>implemented&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>def<sp/>test_too_few_rows(self):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.fail(&quot;Not<sp/>implemented&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="comment">#TableClassTests.addTest(Test_invalid_table_exception(&apos;test_too_few_rows&apos;))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="comment">#TableClassTests.addTest(Test_invalid_table_exception(&apos;test_missing_header_values&apos;))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="comment">#TableClassTests.addTest(Test_invalid_table_exception(&apos;test_invalid_header_values&apos;))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="comment">#TableClassTests.addTest(Test_invalid_table_exception(&apos;test_missing_index&apos;))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="comment">#TableClassTests.addTest(Test_invalid_table_exception(&apos;test_duplicate_index&apos;))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262" refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__invalid__table__exception_1ae263141999af55ce5957d91673ae99fc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__invalid__table__exception_1ae263141999af55ce5957d91673ae99fc" kindref="member">test_missing_header_value</ref>(self):</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file_path<sp/>=<sp/>self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__invalid__table__exception_1ad4234992f9cd1d2f2a7a154dd0b1e442" kindref="member">file_path</ref></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sheet_name<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;Missing<sp/>Header&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>title<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;Missing<sp/>Header&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_table<sp/>=<sp/><ref refid="class_original_01_structures_1_1_structures_1_1_tables_1_1_table" kindref="compound">Table</ref>(file_path=file_path,<sp/>sheet_name=sheet_name,<sp/>title=title)</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/>self.assertRaises(InvalidTable):</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>basic_table<sp/>=<sp/>new_table.read_table(self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__invalid__table__exception_1a1a042336c81dad9e25a15f6505fb16cc" kindref="member">test_excel_file</ref>)</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(basic_table)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="270"><highlight class="normal">TableClassTests.addTest(<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__invalid__table__exception" kindref="compound">Test_invalid_table_exception</ref>(</highlight><highlight class="stringliteral">&apos;test_missing_Spreadsheet&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="271"><highlight class="normal">TableClassTests.addTest(<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__invalid__table__exception" kindref="compound">Test_invalid_table_exception</ref>(</highlight><highlight class="stringliteral">&apos;test_missing_worksheet&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="272"><highlight class="normal">TableClassTests.addTest(<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__invalid__table__exception" kindref="compound">Test_invalid_table_exception</ref>(</highlight><highlight class="stringliteral">&apos;test_missing_index&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="273"><highlight class="normal">TableClassTests.addTest(<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__invalid__table__exception" kindref="compound">Test_invalid_table_exception</ref>(</highlight><highlight class="stringliteral">&apos;test_duplicate_index&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="274"><highlight class="normal">TableClassTests.addTest(<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__invalid__table__exception" kindref="compound">Test_invalid_table_exception</ref>(</highlight><highlight class="stringliteral">&apos;test_missing_title&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="275"><highlight class="normal">TableClassTests.addTest(<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test__invalid__table__exception" kindref="compound">Test_invalid_table_exception</ref>(</highlight><highlight class="stringliteral">&apos;test_incorrect_title&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277" refid="namespace_original_01_structures_1_1_structures_1_1_test_tables_class_1a4e7b2e2dea8175fe3f00ad2a31dedde5" refkind="member"><highlight class="normal">VariableClassTests<sp/>=<sp/>unittest.TestSuite()</highlight></codeline>
<codeline lineno="278" refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test___variable__creation" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test___variable__creation" kindref="compound">Test_Variable_creation</ref>(unittest.TestCase):</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="comment">#TODO<sp/>add<sp/>tests<sp/>for<sp/>exceptions<sp/>raised<sp/>in<sp/>Variable<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282" refid="namespace_original_01_structures_1_1_structures_1_1_test_tables_class_1af90f857c046339aeee0e7f097a7b7c65" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespace_original_01_structures_1_1_structures_1_1_test_tables_class_1af90f857c046339aeee0e7f097a7b7c65" kindref="member">test_creation_with_all_parameters</ref>(self):</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;Test<sp/>create<sp/>Variable<sp/>instance<sp/>with<sp/>all<sp/>attributes<sp/>defined&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ID<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;TestAttr&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variable_type<sp/>=<sp/>VARIABLE_TYPES[0]</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>validate<sp/>=<sp/>always_true</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;Default<sp/>Value&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_attr<sp/>=<sp/><ref refid="class_original_01_structures_1_1_structures_1_1_tables_1_1_variable" kindref="compound">Variable</ref>(ID,<sp/>variable_type,<sp/>validate,<sp/>default)</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(test_attr.ID,<sp/>ID)</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(test_attr.variable_type,<sp/>variable_type)</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(test_attr.validate,<sp/>validate)</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(test_attr.default,<sp/>default)</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294" refid="namespace_original_01_structures_1_1_structures_1_1_test_tables_class_1a9adabcce313f6f27d5e99908955f4fcc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespace_original_01_structures_1_1_structures_1_1_test_tables_class_1a9adabcce313f6f27d5e99908955f4fcc" kindref="member">test_creation_without_default_parameter</ref>(self):</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;Test<sp/>create<sp/>TemplateAttribute<sp/>instance<sp/>with<sp/>only<sp/>required<sp/>attributes<sp/>defined&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ID<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;TestAttr&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variable_type<sp/>=<sp/>VARIABLE_TYPES[0]</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>validate<sp/>=<sp/>always_true</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_attr<sp/>=<sp/><ref refid="class_original_01_structures_1_1_structures_1_1_tables_1_1_variable" kindref="compound">Variable</ref>(ID,<sp/>variable_type,<sp/>validate)</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(test_attr.ID,<sp/>ID)</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(test_attr.variable_type,<sp/>variable_type)</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(test_attr.validate,<sp/>validate)</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertIsNone(test_attr.default)<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="304"><highlight class="normal">VariableClassTests.addTest(<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test___variable__creation" kindref="compound">Test_Variable_creation</ref>(</highlight><highlight class="stringliteral">&apos;test_creation_without_default_parameter&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="305"><highlight class="normal">VariableClassTests.addTest(<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test___variable__creation" kindref="compound">Test_Variable_creation</ref>(</highlight><highlight class="stringliteral">&apos;test_creation_with_all_parameters&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307" refid="namespace_original_01_structures_1_1_structures_1_1_test_tables_class_1a1c1ce821dc993cb64fdaefc2304d3ad7" refkind="member"><highlight class="normal">TableOperationsTests<sp/>=<sp/>unittest.TestSuite()</highlight></codeline>
<codeline lineno="308" refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing" kindref="compound">TestTableImporting</ref>(unittest.TestCase):</highlight></codeline>
<codeline lineno="309" refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1a448c6ae731b8aceae485e1e5e3ad0fbc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1a448c6ae731b8aceae485e1e5e3ad0fbc" kindref="member">setUp</ref>(self):</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;Define<sp/>Tables<sp/>and<sp/>Variables</highlight></codeline>
<codeline lineno="311"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312" refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1a1778685786bbd2d572ba742126fea11e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1a1778685786bbd2d572ba742126fea11e" kindref="member">file_path</ref><sp/>=<sp/>file_path<sp/>=<sp/>Path(</highlight><highlight class="stringliteral">r&apos;.\TablesTest.xlsx&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sheet_name<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;Basic&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>title<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;Basic<sp/>Table&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;A1&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;label&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>columns<sp/>=<sp/>3</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rows<sp/>=<sp/>3</highlight></codeline>
<codeline lineno="319" refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1ae3c6f875112fb11c13c5f0de307434ba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1ae3c6f875112fb11c13c5f0de307434ba" kindref="member">basic_table</ref><sp/>=<sp/><ref refid="class_original_01_structures_1_1_structures_1_1_tables_1_1_table" kindref="compound">Table</ref>(file_path,<sp/>sheet_name,<sp/>title,<sp/>index,<sp/>offset,<sp/>columns,<sp/>rows)</highlight></codeline>
<codeline lineno="320" refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1a4e779f67335eaeee486e9e98c8105638" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1a4e779f67335eaeee486e9e98c8105638" kindref="member">second_table</ref><sp/>=<sp/><ref refid="class_original_01_structures_1_1_structures_1_1_tables_1_1_table" kindref="compound">Table</ref>(file_path,<sp/></highlight><highlight class="stringliteral">&apos;Second&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Second<sp/>Table&apos;</highlight><highlight class="normal">,<sp/>index,<sp/>offset,<sp/>columns,<sp/>rows)</highlight></codeline>
<codeline lineno="321" refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1a7221b5903c266fc34686db77393e279d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1a7221b5903c266fc34686db77393e279d" kindref="member">third_table</ref><sp/>=<sp/><ref refid="class_original_01_structures_1_1_structures_1_1_tables_1_1_table" kindref="compound">Table</ref>(file_path,<sp/></highlight><highlight class="stringliteral">&apos;Third&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Third<sp/>Table&apos;</highlight><highlight class="normal">,<sp/>index,<sp/>offset,<sp/>columns,<sp/>rows)</highlight></codeline>
<codeline lineno="322" refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1a22a3207b4e0e2f2397420fb67d8c3f9e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1a22a3207b4e0e2f2397420fb67d8c3f9e" kindref="member">defaults_table</ref><sp/>=<sp/><ref refid="class_original_01_structures_1_1_structures_1_1_tables_1_1_table" kindref="compound">Table</ref>(file_path,<sp/></highlight><highlight class="stringliteral">&apos;defaults&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Default<sp/>Values<sp/>Table&apos;</highlight><highlight class="normal">,<sp/>index,<sp/>offset,<sp/>columns)</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variable_names<sp/>=<sp/>[(</highlight><highlight class="stringliteral">&apos;order&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;ox&apos;</highlight><highlight class="normal">),<sp/>\</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;Values&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;x&apos;</highlight><highlight class="normal">),<sp/>\</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;Values1&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;x1&apos;</highlight><highlight class="normal">),<sp/>\</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;Values2&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;x2&apos;</highlight><highlight class="normal">),<sp/>\</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;Values3&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;x3&apos;</highlight><highlight class="normal">),<sp/>\</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;Values4&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;x4&apos;</highlight><highlight class="normal">),<sp/>\</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;Values5&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="330" refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1a292c6b923ebea428b966dc330f44aba0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1a292c6b923ebea428b966dc330f44aba0" kindref="member">variables_list</ref><sp/>=<sp/>{ID:<sp/><ref refid="class_original_01_structures_1_1_structures_1_1_tables_1_1_variable" kindref="compound">Variable</ref>(ID,<sp/>VARIABLE_TYPES[0],<sp/>default=dflt)<sp/></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ID,<sp/>dflt)<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>variable_names}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333" refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1a138ee9cbb03748c73e1d9a9c0e42eba8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1a138ee9cbb03748c73e1d9a9c0e42eba8" kindref="member">df_basic</ref><sp/>=<sp/>pd.DataFrame([[1,</highlight><highlight class="stringliteral">&apos;a&apos;</highlight><highlight class="normal">],[2,</highlight><highlight class="stringliteral">&apos;b&apos;</highlight><highlight class="normal">],[3,</highlight><highlight class="stringliteral">&apos;c&apos;</highlight><highlight class="normal">]],index=[</highlight><highlight class="stringliteral">&apos;cat&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;dog&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;fish&apos;</highlight><highlight class="normal">],columns=[</highlight><highlight class="stringliteral">&quot;order&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Values&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="334" refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1a6be28a7347b5b93cdc483cdf47184399" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1a6be28a7347b5b93cdc483cdf47184399" kindref="member">df_second</ref><sp/>=<sp/>pd.DataFrame([[</highlight><highlight class="stringliteral">&apos;foo1&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;blue&apos;</highlight><highlight class="normal">],[</highlight><highlight class="stringliteral">&apos;boo2&apos;</highlight><highlight class="normal">],[</highlight><highlight class="stringliteral">&apos;bob3&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;red&apos;</highlight><highlight class="normal">]],index=[</highlight><highlight class="stringliteral">&apos;cat&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;dog&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;fish&apos;</highlight><highlight class="normal">],columns=[</highlight><highlight class="stringliteral">&quot;Values3&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Values2&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="335" refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1ad5ac3f48a671d7ebbc84a14aa205fabb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1ad5ac3f48a671d7ebbc84a14aa205fabb" kindref="member">df_third</ref><sp/>=<sp/>pd.DataFrame([[</highlight><highlight class="stringliteral">&apos;A3&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;R1&apos;</highlight><highlight class="normal">],[</highlight><highlight class="stringliteral">&apos;B3&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;R2&apos;</highlight><highlight class="normal">],[</highlight><highlight class="stringliteral">&apos;C3&apos;</highlight><highlight class="normal">]],index=[</highlight><highlight class="stringliteral">&apos;cat&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;dog&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;fish&apos;</highlight><highlight class="normal">],columns=[</highlight><highlight class="stringliteral">&quot;Values4&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Values5&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="336" refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1a4385a8c72e7d54bef81e80aeadf5bfb2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1a4385a8c72e7d54bef81e80aeadf5bfb2" kindref="member">df_defaults</ref><sp/>=<sp/>pd.DataFrame([[</highlight><highlight class="stringliteral">&apos;a&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;a1&apos;</highlight><highlight class="normal">],[</highlight><highlight class="stringliteral">&apos;b&apos;</highlight><highlight class="normal">],[</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;c2&apos;</highlight><highlight class="normal">],[</highlight><highlight class="stringliteral">&apos;d&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;d1&apos;</highlight><highlight class="normal">],[</highlight><highlight class="stringliteral">&apos;x&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;x1&apos;</highlight><highlight class="normal">]],<sp/>\</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index=[</highlight><highlight class="stringliteral">&apos;cat&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;dog&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;fish&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;bird&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;default&apos;</highlight><highlight class="normal">],columns=[</highlight><highlight class="stringliteral">&quot;Values1&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Values2&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="338" refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1ae6aad535007ad3a0cd3be61402786e85" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1ae6aad535007ad3a0cd3be61402786e85" kindref="member">new_defaults</ref><sp/>=<sp/>{</highlight><highlight class="stringliteral">&apos;Values1&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;x&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Values2&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;x1&apos;</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340" refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1aab344dcf5af738445e7a32da173f735c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1aab344dcf5af738445e7a32da173f735c" kindref="member">tearDown</ref>(self):</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;Close<sp/>the<sp/>Test<sp/>file&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="344" refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1aad6a907590ed9f6befaf2017cee26642" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1aad6a907590ed9f6befaf2017cee26642" kindref="member">test_select_one_variable</ref>(self):</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;Test<sp/>selection<sp/>of<sp/>columns<sp/>from<sp/>an<sp/>imported<sp/>table</highlight></codeline>
<codeline lineno="346"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variable<sp/>=<sp/>{</highlight><highlight class="stringliteral">&apos;Values&apos;</highlight><highlight class="normal">:<sp/>Variable(</highlight><highlight class="stringliteral">&apos;Values&apos;</highlight><highlight class="normal">,<sp/>VARIABLE_TYPES[0])}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table<sp/>=<sp/>self.basic_table.read_table()</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>selected_table<sp/>=<sp/><ref refid="namespace_original_01_structures_1_1_structures_1_1_tables_1a44014f3a5ece86c7236a948377d285a1" kindref="member">select_variables</ref>(table,<sp/>variable)</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(type(selected_table))</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(selected_table)</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>df_one<sp/>=<sp/>pd.DataFrame(self.df_basic.loc[:,</highlight><highlight class="stringliteral">&apos;Values&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(df_one)</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertTrue(selected_table.equals(df_one))</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#TODO<sp/>Add<sp/>more<sp/>tests<sp/>for<sp/>selecting<sp/>multiple<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#TODO<sp/>Add<sp/>more<sp/>tests<sp/>for<sp/>extraneous<sp/>data<sp/>in<sp/>the<sp/>worksheet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359" refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1a10bac556de664c3a7ff2d1b9c86ae810" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1a10bac556de664c3a7ff2d1b9c86ae810" kindref="member">test_merge_tables_with_one_column_dropped</ref>(self):</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;Test<sp/>merging<sp/>of<sp/>multiple<sp/>tables</highlight></codeline>
<codeline lineno="361"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table_list<sp/>=<sp/>[self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1ae3c6f875112fb11c13c5f0de307434ba" kindref="member">basic_table</ref>,<sp/>self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1a4e779f67335eaeee486e9e98c8105638" kindref="member">second_table</ref>,<sp/>self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1a7221b5903c266fc34686db77393e279d" kindref="member">third_table</ref>]</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variables_used<sp/>=<sp/>self.variables_list.copy()</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>del<sp/>variables_used[</highlight><highlight class="stringliteral">&apos;Values3&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_table<sp/>=<sp/><ref refid="namespace_original_01_structures_1_1_structures_1_1_tables_1a8b9293c6e0f070ff03803c9b010bc0d4" kindref="member">merge_tables</ref>(self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1a1778685786bbd2d572ba742126fea11e" kindref="member">file_path</ref>,<sp/>table_list,<sp/>variables_used)</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_table.sort_index(axis=1,<sp/>inplace=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(test_table)</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>df_list<sp/>=<sp/>[self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1a138ee9cbb03748c73e1d9a9c0e42eba8" kindref="member">df_basic</ref>,<sp/>self.df_second.drop(</highlight><highlight class="stringliteral">&apos;Values3&apos;</highlight><highlight class="normal">,axis=1),<sp/>self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1ad5ac3f48a671d7ebbc84a14aa205fabb" kindref="member">df_third</ref>]</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_pd<sp/>=<sp/>pd.DataFrame()</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_pd<sp/>=<sp/>test_pd.join(df_list,<sp/>how=</highlight><highlight class="stringliteral">&apos;outer&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_pd.sort_index(axis=1,<sp/>inplace=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(test_pd)</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertTrue(test_table.equals(test_pd))</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375" refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1a5968274a89bd8732a9140a5645b50f6b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1a5968274a89bd8732a9140a5645b50f6b" kindref="member">test_merge_tables_with_missing_and_extra_values</ref>(self):</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;Test<sp/>merging<sp/>of<sp/>multiple<sp/>tables<sp/>with<sp/>some<sp/>tables<sp/>having<sp/>additional<sp/></highlight></codeline>
<codeline lineno="377"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rows<sp/>and<sp/>other<sp/>rows<sp/>having<sp/>missing<sp/>values.</highlight></codeline>
<codeline lineno="378"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table_list<sp/>=<sp/>[self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1a7221b5903c266fc34686db77393e279d" kindref="member">third_table</ref>,<sp/>self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1a22a3207b4e0e2f2397420fb67d8c3f9e" kindref="member">defaults_table</ref>]</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_table<sp/>=<sp/><ref refid="namespace_original_01_structures_1_1_structures_1_1_tables_1a8b9293c6e0f070ff03803c9b010bc0d4" kindref="member">merge_tables</ref>(self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1a1778685786bbd2d572ba742126fea11e" kindref="member">file_path</ref>,<sp/>table_list,<sp/>self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1a292c6b923ebea428b966dc330f44aba0" kindref="member">variables_list</ref>)</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_table.sort_index(axis=1,<sp/>inplace=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(test_table)</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>df_list<sp/>=<sp/>[self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1ad5ac3f48a671d7ebbc84a14aa205fabb" kindref="member">df_third</ref>,<sp/>self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1a4385a8c72e7d54bef81e80aeadf5bfb2" kindref="member">df_defaults</ref>]</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_pd<sp/>=<sp/>pd.DataFrame()</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_pd<sp/>=<sp/>test_pd.join(df_list,<sp/>how=</highlight><highlight class="stringliteral">&apos;outer&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_pd.sort_index(axis=1,<sp/>inplace=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(test_pd)</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertTrue(test_table.equals(test_pd))</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390" refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1a5297531651719dc5aab54f2c005cf084" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1a5297531651719dc5aab54f2c005cf084" kindref="member">test_select_multiple_variable</ref>(self):</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;Test<sp/>selection<sp/>of<sp/>columns<sp/>from<sp/>an<sp/>imported<sp/>table</highlight></codeline>
<codeline lineno="392"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>df_list<sp/>=<sp/>[self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1ad5ac3f48a671d7ebbc84a14aa205fabb" kindref="member">df_third</ref>,<sp/>self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1a6be28a7347b5b93cdc483cdf47184399" kindref="member">df_second</ref>]</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Initial_pd<sp/>=<sp/>pd.DataFrame()</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Initial_pd<sp/>=<sp/>Initial_pd.join(df_list,<sp/>how=</highlight><highlight class="stringliteral">&apos;outer&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Initial_pd.sort_index(axis=1,<sp/>inplace=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(Initial_pd)</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variables<sp/>=<sp/>self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1a292c6b923ebea428b966dc330f44aba0" kindref="member">variables_list</ref></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>del<sp/>variables[</highlight><highlight class="stringliteral">&apos;Values5&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>del<sp/>variables[</highlight><highlight class="stringliteral">&apos;Values2&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>selected_table<sp/>=<sp/><ref refid="namespace_original_01_structures_1_1_structures_1_1_tables_1a44014f3a5ece86c7236a948377d285a1" kindref="member">select_variables</ref>(Initial_pd,<sp/>variables)</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>selected_table.sort_index(axis=1,<sp/>inplace=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(selected_table)</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_pd<sp/>=<sp/>pd.DataFrame()</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_pd<sp/>=<sp/>test_pd.join([self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1a6be28a7347b5b93cdc483cdf47184399" kindref="member">df_second</ref>[</highlight><highlight class="stringliteral">&apos;Values3&apos;</highlight><highlight class="normal">],<sp/>self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1ad5ac3f48a671d7ebbc84a14aa205fabb" kindref="member">df_third</ref>[</highlight><highlight class="stringliteral">&apos;Values4&apos;</highlight><highlight class="normal">]],<sp/>how=</highlight><highlight class="stringliteral">&apos;outer&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertTrue(selected_table.equals(test_pd))</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408" refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1a5f62e2c5a4fca03e8bb646cd013a96e1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1a5f62e2c5a4fca03e8bb646cd013a96e1" kindref="member">test_merge_tables_with_duplicate_variables</ref>(self):</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;Test<sp/>merging<sp/>of<sp/>multiple<sp/>tables<sp/>with<sp/>one<sp/>variable<sp/>in<sp/>more<sp/>than<sp/>one<sp/>table.</highlight></codeline>
<codeline lineno="410"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table_list<sp/>=<sp/>[self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1a4e779f67335eaeee486e9e98c8105638" kindref="member">second_table</ref>,<sp/>self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1a22a3207b4e0e2f2397420fb67d8c3f9e" kindref="member">defaults_table</ref>]</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/>self.assertRaises(InvalidVariable):</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_table<sp/>=<sp/><ref refid="namespace_original_01_structures_1_1_structures_1_1_tables_1a8b9293c6e0f070ff03803c9b010bc0d4" kindref="member">merge_tables</ref>(self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1a1778685786bbd2d572ba742126fea11e" kindref="member">file_path</ref>,<sp/>table_list,<sp/>self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1a292c6b923ebea428b966dc330f44aba0" kindref="member">variables_list</ref>)</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415" refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1a3aa93377da69d8a9aad6ef86df8fa931" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1a3aa93377da69d8a9aad6ef86df8fa931" kindref="member">test_process_defaults</ref>(self):</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;Test<sp/>setting<sp/>variable<sp/>defaults<sp/>from<sp/>table</highlight></codeline>
<codeline lineno="417"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>df_list<sp/>=<sp/>[self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1ad5ac3f48a671d7ebbc84a14aa205fabb" kindref="member">df_third</ref>,<sp/>self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1a4385a8c72e7d54bef81e80aeadf5bfb2" kindref="member">df_defaults</ref>]</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_pd<sp/>=<sp/>pd.DataFrame()</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_pd<sp/>=<sp/>test_pd.join(df_list,<sp/>how=</highlight><highlight class="stringliteral">&apos;outer&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>var<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.variables_list.values():</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;Variable:<sp/>{},<sp/>Defaults<sp/>Value<sp/>{}\n&apos;</highlight><highlight class="normal">.format(var.ID,<sp/>var.default))</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(test_pd)</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>original_defaults<sp/>=<sp/>{var.ID:<sp/>var.default<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>var<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.variables_list.values()}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updated_variables_list<sp/>=<sp/><ref refid="namespace_original_01_structures_1_1_structures_1_1_tables_1aa3fe9440a61452b249437bffc0231a5b" kindref="member">process_defaults</ref>(test_pd,<sp/>self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1a292c6b923ebea428b966dc330f44aba0" kindref="member">variables_list</ref>)</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updated_defaults<sp/>=<sp/>{var.ID:<sp/>var.default<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>var<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>updated_variables_list.values()}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>var<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>updated_variables_list.values():</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;Variable:<sp/>{},<sp/>Defaults<sp/>Value<sp/>{}\n&apos;</highlight><highlight class="normal">.format(var.ID,<sp/>var.default))</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_defaults<sp/>=<sp/>original_defaults</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_defaults.update(self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1ae6aad535007ad3a0cd3be61402786e85" kindref="member">new_defaults</ref>)</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertDictEqual(updated_defaults,test_defaults)</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433" refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1aa82ec4dccee79f30323819bc562542a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1aa82ec4dccee79f30323819bc562542a0" kindref="member">test_process_no_defaults</ref>(self):</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;Test<sp/>setting<sp/>variable<sp/>defaults<sp/>from<sp/>table</highlight></codeline>
<codeline lineno="435"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_pd<sp/>=<sp/>self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1ad5ac3f48a671d7ebbc84a14aa205fabb" kindref="member">df_third</ref></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>var<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.variables_list.values():</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;Variable:<sp/>\t{},<sp/>\tDefaults<sp/>Value<sp/>\t{}&apos;</highlight><highlight class="normal">.format(var.ID,<sp/>var.default))</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(test_pd)</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_defaults<sp/>=<sp/>{var.ID:<sp/>var.default<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>var<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.variables_list.values()}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updated_variables_list<sp/>=<sp/><ref refid="namespace_original_01_structures_1_1_structures_1_1_tables_1aa3fe9440a61452b249437bffc0231a5b" kindref="member">process_defaults</ref>(test_pd,<sp/>self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1a292c6b923ebea428b966dc330f44aba0" kindref="member">variables_list</ref>)</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updated_defaults<sp/>=<sp/>{var.ID:<sp/>var.default<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>var<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>updated_variables_list.values()}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>var<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>updated_variables_list.values():</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;Variable:<sp/>\t{},<sp/>\tDefaults<sp/>Value<sp/>\t{}&apos;</highlight><highlight class="normal">.format(var.ID,<sp/>var.default))</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertDictEqual(updated_defaults,test_defaults)</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447" refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1a625b7b8d7e96c6194359302b4da81850" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1a625b7b8d7e96c6194359302b4da81850" kindref="member">test_update_missing_values</ref>(self):</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;Test<sp/>merging<sp/>of<sp/>multiple<sp/>tables<sp/>with<sp/>some<sp/>tables<sp/>having<sp/>additional<sp/></highlight></codeline>
<codeline lineno="449"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rows<sp/>and<sp/>other<sp/>rows<sp/>having<sp/>missing<sp/>values.</highlight></codeline>
<codeline lineno="450"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>df_list<sp/>=<sp/>[self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1ad5ac3f48a671d7ebbc84a14aa205fabb" kindref="member">df_third</ref>,<sp/>self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1a6be28a7347b5b93cdc483cdf47184399" kindref="member">df_second</ref>]</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Initial_pd<sp/>=<sp/>pd.DataFrame()</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Initial_pd<sp/>=<sp/>Initial_pd.join(df_list,<sp/>how=</highlight><highlight class="stringliteral">&apos;outer&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Initial_pd.sort_index(axis=1,<sp/>inplace=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(Initial_pd)</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_pd<sp/>=<sp/>Initial_pd.copy()</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_pd.loc[</highlight><highlight class="stringliteral">&apos;dog&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;Values2&apos;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1a292c6b923ebea428b966dc330f44aba0" kindref="member">variables_list</ref>[</highlight><highlight class="stringliteral">&apos;Values2&apos;</highlight><highlight class="normal">].default</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(test_pd)</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updated_pd<sp/>=<sp/><ref refid="namespace_original_01_structures_1_1_structures_1_1_tables_1a58930752b452fd8c20d2ccc7c737ca87" kindref="member">insert_defaults</ref>(Initial_pd,<sp/>self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1a292c6b923ebea428b966dc330f44aba0" kindref="member">variables_list</ref>)</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(updated_pd)</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updated_pd.sort_index(axis=1,<sp/>inplace=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertTrue(test_pd.equals(updated_pd))</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464" refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1a48e7f16a271193d36ac22d6c32543cb4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1a48e7f16a271193d36ac22d6c32543cb4" kindref="member">test_insert_missing_variables</ref>(self):</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;Test<sp/>adding<sp/>variables<sp/>with<sp/>their<sp/>default<sp/>values<sp/>for<sp/>variables<sp/></highlight></codeline>
<codeline lineno="466"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>a<sp/>list<sp/>which<sp/>are<sp/>not<sp/>found<sp/>in<sp/>the<sp/>table.</highlight></codeline>
<codeline lineno="467"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>df_list<sp/>=<sp/>[self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1a138ee9cbb03748c73e1d9a9c0e42eba8" kindref="member">df_basic</ref>,<sp/>self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1a6be28a7347b5b93cdc483cdf47184399" kindref="member">df_second</ref>]</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Initial_pd<sp/>=<sp/>pd.DataFrame()</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Initial_pd<sp/>=<sp/>Initial_pd.join(df_list,<sp/>how=</highlight><highlight class="stringliteral">&apos;outer&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Initial_pd.sort_index(axis=1,<sp/>inplace=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(Initial_pd)</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_pd<sp/>=<sp/>Initial_pd.copy()</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_pd[</highlight><highlight class="stringliteral">&apos;Values1&apos;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1a292c6b923ebea428b966dc330f44aba0" kindref="member">variables_list</ref>[</highlight><highlight class="stringliteral">&apos;Values1&apos;</highlight><highlight class="normal">].default</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_pd[</highlight><highlight class="stringliteral">&apos;Values4&apos;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1a292c6b923ebea428b966dc330f44aba0" kindref="member">variables_list</ref>[</highlight><highlight class="stringliteral">&apos;Values4&apos;</highlight><highlight class="normal">].default</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_pd.sort_index(axis=1,<sp/>inplace=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(test_pd)</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updated_pd<sp/>=<sp/><ref refid="namespace_original_01_structures_1_1_structures_1_1_tables_1a4e038248c73853d6e2375fa8d9926252" kindref="member">insert_missing_variables</ref>(Initial_pd,<sp/>self.<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing_1a292c6b923ebea428b966dc330f44aba0" kindref="member">variables_list</ref>)</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updated_pd.sort_index(axis=1,<sp/>inplace=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(updated_pd)</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertTrue(test_pd.equals(updated_pd))</highlight></codeline>
<codeline lineno="482"><highlight class="normal">TableOperationsTests.addTest(<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing" kindref="compound">TestTableImporting</ref>(</highlight><highlight class="stringliteral">&apos;test_select_one_variable&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="483"><highlight class="normal">TableOperationsTests.addTest(<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing" kindref="compound">TestTableImporting</ref>(</highlight><highlight class="stringliteral">&apos;test_merge_tables_with_one_column_dropped&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="484"><highlight class="normal">TableOperationsTests.addTest(<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing" kindref="compound">TestTableImporting</ref>(</highlight><highlight class="stringliteral">&apos;test_merge_tables_with_missing_and_extra_values&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="485"><highlight class="normal">TableOperationsTests.addTest(<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing" kindref="compound">TestTableImporting</ref>(</highlight><highlight class="stringliteral">&apos;test_merge_tables_with_duplicate_variables&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="486"><highlight class="normal">TableOperationsTests.addTest(<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing" kindref="compound">TestTableImporting</ref>(</highlight><highlight class="stringliteral">&apos;test_process_defaults&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="487"><highlight class="normal">TableOperationsTests.addTest(<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing" kindref="compound">TestTableImporting</ref>(</highlight><highlight class="stringliteral">&apos;test_process_no_defaults&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="488"><highlight class="normal">TableOperationsTests.addTest(<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing" kindref="compound">TestTableImporting</ref>(</highlight><highlight class="stringliteral">&apos;test_update_missing_values&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="489"><highlight class="normal">TableOperationsTests.addTest(<ref refid="class_original_01_structures_1_1_structures_1_1_test_tables_class_1_1_test_table_importing" kindref="compound">TestTableImporting</ref>(</highlight><highlight class="stringliteral">&apos;test_insert_missing_variables&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;__main__&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>unittest.main()</highlight></codeline>
    </programlisting>
    <location file="C:/Users/Greg/OneDrive - Queen's University/Work/Structure Dictionary/Python code/Original Structures/Structures/TestTablesClass.py"/>
  </compounddef>
</doxygen>
